{"version":3,"sources":["componets/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","setInterval","date","setState","console","log","prevProps","clockName","props","clearInterval","React","Component","App","isClockVisible","className","role","type","onClick","Math","trunc","random","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKH,KAAOI,aAAY,WACtB,IAAMC,EAAO,IAAIJ,KAEjB,EAAKK,SAAS,CAAEN,KAAMK,EAAKH,uBAE3BK,QAAQC,IAAIH,EAAKH,wBAChB,OAZP,gCAeE,SAAmBO,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJA,IAAcD,EAAUC,WAE1BH,QAAQC,IAAR,qCAA0CC,EAAUC,UAApD,eAAoEA,MApB1E,kCAwBE,WACEE,cAAcT,KAAKH,QAzBvB,oBA4BE,WACE,IAAQA,EAASG,KAAKJ,MAAdC,KAER,OACE,2BACG,iBACAA,OAlCT,GAA2Ba,IAAMC,YC6DlBC,E,4MA1DbhB,MAAQ,CACNiB,gBAAgB,EAChBN,UAAW,G,4CAGb,WAAU,IAAD,OACP,EAAsCP,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBN,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,wBAAIA,UAAU,cAAd,eACCD,EACG,kBAAC,EAAD,CAAON,UAAWA,IAElB,4CAEE,0BACEO,UAAU,gDAKVC,KAAK,YAIb,4BACED,UAAU,0BACVE,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEU,gBAAgB,MAJpC,cASA,4BACEC,UAAU,0BACVE,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEU,gBAAgB,MAJpC,cASA,4BACEC,UAAU,uBACVE,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEI,UAAWW,KAAKC,MAAsB,IAAhBD,KAAKE,cAJ/C,wB,GA7CUV,IAAMC,WCAxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d27b190f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.time = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.time);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p>\n        {'Current time: '}\n        {time}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './componets/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-muted\">React clock</h1>\n        {isClockVisible\n          ? <Clock clockName={clockName} />\n          : (\n            <p>\n              {`Keep waiting: `}\n              <span\n                className=\"\n                  spinner-border\n                  text-primary\n                  spinner-grow-sm\n                \"\n                role=\"status\"\n              />\n            </p>\n          )}\n        <button\n          className=\"btn btn-outline-success\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show clock\n        </button>\n        <button\n          className=\"btn btn-outline-warning\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide clock\n        </button>\n        <button\n          className=\"btn btn-outline-info\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.trunc(Math.random() * 100) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}